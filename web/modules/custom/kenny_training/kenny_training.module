<?php

/**
 * @file
 * Primary module hooks for Kenny - main module.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeInterface;
use Drupal\paragraphs\ParagraphInterface;
use Drupal\views\ViewExecutable;
use Symfony\Component\HttpFoundation\JsonResponse;

/**
 * Implements hook_entity_extra_field_info(),
 */
function kenny_training_entity_extra_field_info() {
  $extra = [];
  $extra['paragraph']['back']['display']['exercise_weight'] = [
    'label' => t('Weight of exercise'),
    'weight' => 100,
    'visible' => FALSE,
  ];

  $extra['paragraph']['biceps']['display']['exercise_weight'] = [
    'label' => t('Weight of exercise'),
    'weight' => 100,
    'visible' => FALSE,
  ];

  $extra['paragraph']['chest']['display']['exercise_weight'] = [
    'label' => t('Weight of exercise'),
    'weight' => 100,
    'visible' => FALSE,
  ];

  $extra['paragraph']['legs']['display']['exercise_weight'] = [
    'label' => t('Weight of exercise'),
    'weight' => 100,
    'visible' => FALSE,
  ];

  $extra['paragraph']['shoulders']['display']['exercise_weight'] = [
    'label' => t('Weight of exercise'),
    'weight' => 100,
    'visible' => FALSE,
  ];

  $extra['paragraph']['triceps']['display']['exercise_weight'] = [
    'label' => t('Weight of exercise'),
    'weight' => 100,
    'visible' => FALSE,
  ];

  $extra['node']['training_plan']['display']['total_weight'] = [
      'label' => t('Total weight'),
      'weight' => 100,
      'visible' => FALSE,
  ];


  // ---------------------------------------------------------------- //
  // Поле для відносного розрахунку щодо минулого тренування //
  $extra['paragraph']['back']['display']['difference'] = [
    'label' => t('The difference compared to the previous training'),
    'weight' => 100,
    'visible' => FALSE,
  ];

  $extra['paragraph']['biceps']['display']['difference'] = [
    'label' => t('The difference compared to the previous training'),
    'weight' => 100,
    'visible' => FALSE,
  ];

  $extra['paragraph']['chest']['display']['difference'] = [
    'label' => t('The difference compared to the previous training'),
    'weight' => 100,
    'visible' => FALSE,
  ];

  $extra['paragraph']['legs']['display']['difference'] = [
    'label' => t('The difference compared to the previous training'),
    'weight' => 100,
    'visible' => FALSE,
  ];

  $extra['paragraph']['shoulders']['display']['difference'] = [
    'label' => t('The difference compared to the previous training'),
    'weight' => 100,
    'visible' => FALSE,
  ];

  $extra['paragraph']['triceps']['display']['difference'] = [
    'label' => t('The difference compared to the previous training'),
    'weight' => 100,
    'visible' => FALSE,
  ];


  // -------------------------------------------------------------------//

  return $extra;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function kenny_training_paragraph_view(array &$build, ParagraphInterface $paragraph, EntityViewDisplayInterface $display, $view_mode) {
  $bem_block = Html::getClass( 'paragraph-' . $paragraph->bundle() . ($view_mode == 'default' ? '' : '-' . $view_mode));
  if ($display->getComponent('exercise_weight')) {
    /** @var \Drupal\kenny_training\Service\Weight\WeightManager $exercise */
    $exercise = \Drupal::service('kenny_training.weight_manager');
    $exercise_weight = $exercise->getTotalExerciseWeight($paragraph->id());
    $build['exercise_weight'] = [
      '#type' => 'inline_template',
      '#template' => '<div class="{{ class }}">{{ exercise_weight }}</div>',
      '#context' => [
          'exercise_weight' => $exercise_weight . ' kg',
          'class' => $bem_block . '__exercise-weight',
      ],
    ];
  }

  if ($display->getComponent('difference')) {
    /** @var \Drupal\kenny_training\Service\DifferenceWeight\DifferenceManager $paragraph */
    $difference_manager = \Drupal::service('kenny_training.difference_manager');
    $exercise = $difference_manager->getCurrentParagraph($paragraph->id());
    $build['difference'] = [
      '#type' => 'inline_template',
      '#template' => '<div class="{{ class }}">{{ difference }}</div>',
      '#context' => [
        'difference' => $exercise['weight'] . ' kg',
        'class' => $bem_block . '__difference-' . $exercise['class']
      ],
    ];
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function kenny_training_node_view(array &$build, NodeInterface $node, EntityViewDisplayInterface $display, $view_mode) {
  $bem_block = Html::getClass( 'node-' . $node->bundle() . ($view_mode == 'default' ? '' : '-' . $view_mode));
  if ($display->getComponent('total_weight') && $node->bundle() == 'training_plan') {
    /** @var \Drupal\kenny_training\Service\Weight\WeightManager $training */
    $training = \Drupal::service('kenny_training.weight_manager');
    $total_weight = $training->getTotalWeight($node->id());
    $build['total_weight'] = [
      '#type' => 'inline_template',
      '#template' => '<div class="{{ class }}">{{ total_weight }}</div>',
      '#context' => [
          'total_weight' => 'Total weight: ' . $total_weight . ' kg',
          'class' => $bem_block . '__total-weight'
      ],
    ];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function kenny_training_preprocess_node__training_plan__teaser(&$variables) {
  $current_user = \Drupal::currentUser();
  $node = $variables['node'];

  $favorite_manager = \Drupal::service('kenny_training.favorite_manager');
  $is_favorite = $favorite_manager->isFavorite($current_user->id(), $node->id());
  $variables['#attached']['library'][] = 'kenny_training/kenny_training_script';

  $variables['user_id'] = $current_user->id();
  $variables['node_id'] = $node->id();

  $variables['is_favorite'] = $is_favorite;
}

/**
 * Implements hook_form_alter().
 */
function kenny_training_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Перевірте, чи це ваша форма (form_id).
  if ($form_id == 'kenny_training_plan_form') {
    // Підключіть JavaScript файл до вашої форми.
    $form['#attached']['library'][] = 'kenny_training/kenny_training_script';
  }
}

/**
 * Implements hook_views_pre_view().
 */
function kenny_training_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
  if ($view->id() == "favorite_training_plan" && $display_id == 'page_favorite_training_plan') {
    $current_user = \Drupal::currentUser()->id();
    $favorite_manager = \Drupal::service('kenny_training.favorite_manager');
    $favorite_training_plan_ids = $favorite_manager->getFavoriteTrainingPlans($current_user);

    $nid_argument_value = implode('+', $favorite_training_plan_ids);

    $view->setArguments([$nid_argument_value]);
    $view->execute();
  }

}

